name: Server CI
on:
    pull_request:
        paths:
            - 'server/**'

jobs:
    quality-checks:
        runs-on: ubuntu-latest
        env:
            working-directory: ./server
        strategy:
            matrix:
                python-version: [3.8, 3.9]

        steps:
            - uses: actions/checkout@v2

            - name: Set up data folder
              run: mkdir ${HOME}/.scope

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              run: |
                  curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

            - name: Install LibHDF5
              run: |
                sudo apt-get install libhdf5-dev

            - name: Install dependencies
              run: |
                  ${HOME}/.poetry/bin/poetry install
              working-directory: ${{ env.working-directory }}

            - name: Generate GRPC definitions
              run: |
                ${HOME}/.poetry/bin/poetry run bash ./compile-proto.sh
              working-directory: ${{ env.working-directory }}

            - name: Run pylint
              run: |
                  ${HOME}/.poetry/bin/poetry run pylint-fail-under --fail_under "8" --rcfile pyproject.toml scopeserver main.py scopec.py
              working-directory: ${{ env.working-directory }}

            - name: Run black
              run: |
                  ${HOME}/.poetry/bin/poetry run black --check .
              working-directory: ${{ env.working-directory }}

            - name: Run mypy
              run: |
                  ${HOME}/.poetry/bin/poetry run mypy --config-file pyproject.toml --ignore-missing-imports scopeserver test main.py scopec.py
              working-directory: ${{ env.working-directory }}

            - name: Run pytest
              run: |
                  ${HOME}/.poetry/bin/poetry run pytest --cov-report term-missing --cov=scopeserver --cov-branch --cov-fail-under=42.5 --doctest-modules --ignore-glob=alembic --profile
              working-directory: ${{ env.working-directory }}

            - name: Run safety security checks
              run: |
                  ${HOME}/.poetry/bin/poetry export --dev -o requirements.txt
                  ${HOME}/.poetry/bin/poetry run safety check -r requirements.txt
              working-directory: ${{ env.working-directory }}
