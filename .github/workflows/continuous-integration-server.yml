name: Server CI
on:
  pull_request:
    paths-ignore:
    - 'src/**'

jobs:
    quality-checks:
        runs-on: ubuntu-latest
        env:
          working-directory: ./opt
        strategy:
            matrix:
                python-version: [3.7, 3.8]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              run: |
                curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
            - name: Install dependencies
              run: |
                ${HOME}/.poetry/bin/poetry install
              working-directory: ${{ env.working-directory }}

            - name: Run pylint
              run: |
                ${HOME}/.poetry/bin/poetry run pylint-fail-under --fail_under "6.25" --rcfile pyproject.toml scopeserver
              working-directory: ${{ env.working-directory }}

            - name: Run black
              run: |
                ${HOME}/.poetry/bin/poetry run black --check .
              working-directory: ${{ env.working-directory }}

            - name: Run mypy
              run: |
                ${HOME}/.poetry/bin/poetry run mypy --config-file pyproject.toml --ignore-missing-imports scopeserver
              working-directory: ${{ env.working-directory }}

            - name: Run pytest
              run: |
                ${HOME}/.poetry/bin/poetry run pytest --cov=scopeserver --cov-branch --cov-fail-under=23 test/
              working-directory: ${{ env.working-directory }}

            - name: Run safety security checks
              run: |
                ${HOME}/.poetry/bin/poetry run pip freeze | ${HOME}/.poetry/bin/poetry run safety check --stdin
              working-directory: ${{ env.working-directory }}
